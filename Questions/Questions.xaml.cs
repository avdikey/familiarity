using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace familiarity_wpf
{
    /// <summary>
    /// Логика взаимодействия для Questions.xaml
    /// </summary>
    public partial class Questions : Window
    {
        string[][][] lang = LanguageWindows.Translation;
        public Questions()
        {
            MakeTempVar();
            InitializeComponent();
            this.Title = lang[Data.language][0][2];
            this.Background = Theme.background_color;
        }
        public void MakeTempVar()
        {
            LanguageWindows.Temp[0] = lang[Data.language][5][0];
            LanguageWindows.Temp[1] = lang[Data.language][5][1];
            LanguageWindows.Temp[2] = lang[Data.language][5][2];
            LanguageWindows.Temp[3] = lang[Data.language][5][3];
            LanguageWindows.Temp[4] = lang[Data.language][5][4];
        }

        private void button_back_Click(object sender, RoutedEventArgs e)
        {
            if (Data.Endless == false)
            {
                Players_Second window1 = new Players_Second();
                window1.Show();
                Close();
            }
            else
            {
                MainWindow window1 = new MainWindow();
                window1.Show();
                Close();
            }
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            switch (Data.language)
            {
                case 0:
                    _ = MessageBox.Show("Coming soon...", "How to make question set", MessageBoxButton.OK, MessageBoxImage.Information);
                    break;
                case 1:
                    MessageBox.Show("Скоро будет...", "Как сделать набор вопросов", MessageBoxButton.OK, MessageBoxImage.Information);
                    break;
                case 2:
                    MessageBox.Show("Скоро буде...", "Як зробити набір питань", MessageBoxButton.OK, MessageBoxImage.Information);
                    break;
            }

        }

        private void Button_Click_1(object sender, RoutedEventArgs e)
        {
            if (Data.Endless)
            {
                List<string> quest = new List<string>{"Опиши себя в трех словах.", "Твое любимое хобби?",
                    "В какой стране ты хотел(а) бы жить?", "Что ты больше всего ценишь в своих друзьях?",
                    "Кто для тебя пример для подражания?", "Твой любимый цвет?", "Твой любимый запах?",
                    "В каком деле тебя можно назвать профессионалом?", "Твое любимое блюдо?","Твоя любимая игра?",
                    "Как давно ты закончил(а) школу?", "Если бы у тебя была такая возможность, то в какой ситуации ты хотел(а) бы оказаться на час?",
                    "Какой язык ты бы выучил(а)?", "Чай или кофе?", "Твой любимый школьный предмет?", "Android или iPhone?",
                    "Твоя заветная мечта?", "Твои ближайшие цели?", "В каких городах ты был(а)?", "Что означает твое имя?",
                    "Твой любимый сериал или шоу?", "Играешь ли ты на музыкальном инструменте? На каком хотел(а) бы научиться играть?",
                    "Любимый мультгерой?", "За что ты больше всего ценишь жизнь?", "Твое самое первое воспоминание с детства?",
                    "Самое красивое место, в котором ты был(а)?", "Что стоит на твоём окне?",
                    "Что для тебя страшнее во время отпуска: невыносимая жара в горах или шторм на море?", "Красил(а) ли ты когда-нибудь волосы?",
                    "Что в уборке ты не любишь больше всего?", "Что ты думаешь об игроке справа от тебя?", "Что ты думаешь об игроке слева от тебя?",
                    "Твой рост?", "Если бы тебе навсегда запретили заниматься твоей нынешней работой, какую новую профессию ты бы выбрал(а)?",
                    "Хотел(а) бы ты дружить с таким человеком, как ты?", "Если бы список семи чудес света нужно было составить заново, что бы ты в него включил(а)?",
                    "Если бы твоя жизнь была фильмом, как бы он назывался?", "Какого цвета должна быть идеальная кухня?",
                    "Ты возвращаешься домой с работы и видишь, что твоё место занял клон, а друзья и семья не заметили подмены. Как доказать, что их настоящий родственник — ты?",
                    "Какому стилю танцев ты хотел(а) бы научиться?", "Чем ты предпочитаешь путешествовать?", "Твой любимый напиток?",
                    "Твой любимый фрукт?", "Кого в этой комнате ты знаешь лучше всего?", "Чтобы ты съел(а) прямо сейчас?",
                    "Как ты проводишь свободное время?","Назви 5 приложений на телефоне, которыми ты пользуешься чаще всего.",
                    "Самый полезный совет, который тебе дали?", "Любимый стиль музыки?", "Какими должны быть идеальные отношения?",
                    "Что заставляет тебя чувствовать ребёнком и окунуться в детство?", "Как ты оцениваешь свою внешность и характер?",
                    "Что тебе никогда не надоест делать?", "Как ты избавляешься от негативных мыслей?", "Как бы ты потратил(а) свои последние часы в жизни?",
                    "Самое лучшее блюдо, что ты когда-либо готовил(а).", "Что изменило твоё жизненное мировоззрение в корне?",
                    "Самая скучное занятие для тебя?", "Твой любимый стиль одежды?", "Какие комплименты любишь говорить? А какие получать?",
                    "Какие черты характера в других больше всего тебя раздражают?", "Твоя любимая эпоха?", "Как тебя называли в детстве?",
                    "О чем любишь думать по ночам и перед сном?", "Твой любимый писатель?", "Твой любимый музыкант?","Твой самый любимый актёр и актриса?",
                    "Твоё лучшее приключение в жизни?", "Приключение, которое ты хочешь совершить?", "Твой скрытый талант, о котором почти никто не знает?",
                    "Твой лучший друг?", "Любимый супергерой или вымышленный персонаж?", "Почему учишься или работаешь в данной сфере?",
                    "Твоя любимая фраза или цитата?"
                };
                Data.questionEndless = quest;
            }
            else
            {
                List<string> questMale = new List<string>{"Опиши себя в трех словах.", "Твое любимое хобби?",
                    "В какой стране ты хотел бы жить?", "Что ты больше всего ценишь в своих друзьях?",
                    "Кто для тебя пример для подражания?", "Твой любимый цвет?", "Твой любимый запах?",
                    "В каком деле тебя можно назвать профессионалом?", "Твое любимое блюдо?","Твоя любимая игра?",
                    "Как давно ты закончил школу?", "Если бы у тебя была такая возможность, то в какой ситуации ты хотел бы оказаться на час?",
                    "Какой язык ты бы выучил?", "Чай или кофе?", "Твой любимый школьный предмет?", "Android или iPhone?",
                    "Твоя заветная мечта?", "Твои ближайшие цели?", "В каких городах ты был?", "Что означает твое имя?",
                    "Твой любимый сериал или шоу?", "Играешь ли ты на музыкальном инструменте? На каком хотел бы научиться играть?",
                    "Любимый мультгерой?", "За что ты больше всего ценишь жизнь?", "Твое самое первое воспоминание с детства?",
                    "Самое красивое место, в котором ты был?", "Что стоит на твоём окне?",
                    "Что для тебя страшнее во время отпуска: невыносимая жара в горах или шторм на море?", "Красил ли ты когда-нибудь волосы?",
                    "Что в уборке ты не любишь больше всего?", "Что ты думаешь об игроке справа от тебя?", "Что ты думаешь об игроке слева от тебя?",
                    "Твой рост?", "Если бы тебе навсегда запретили заниматься твоей нынешней работой, какую новую профессию ты бы выбрал?",
                    "Хотел бы ты дружить с таким человеком, как ты?", "Если бы список семи чудес света нужно было составить заново, что бы ты в него включил?",
                    "Если бы твоя жизнь была фильмом, как бы он назывался?", "Каким должен быть идеальный гараж?",
                    "Ты возвращаешься домой с работы и видишь, что твоё место занял клон, а друзья и семья не заметили подмены. Как доказать, что их настоящий родственник — ты?",
                    "Какому стилю танцев ты хотел бы научиться?", "Чем ты предпочитаешь путешествовать?", "Твой любимый напиток?",
                    "Твой любимый фрукт?", "Кого в этой комнате ты знаешь лучше всего?", "Чтобы ты съел прямо сейчас?",
                    "Как ты проводишь свободное время?", "Назви 5 приложений на телефоне, которыми ты пользуешься чаще всего.",
                    "Самый полезный совет, который тебе дали?", "Любимый стиль музыки?", "Какими должны быть идеальные отношения?",
                    "Что заставляет тебя чувствовать ребёнком и окунуться в детство?", "Как ты оцениваешь свою внешность и характер?",
                    "Что тебе никогда не надоест делать?", "Как ты избавляешься от негативных мыслей?", "Как бы ты потратил свои последние часы в жизни?",
                    "Самое лучшее блюдо, что ты когда-либо готовил.", "Что изменило твоё жизненное мировоззрение в корне?",
                    "Самая скучное занятие для тебя?", "Твой любимый стиль одежды?", "Какие комплименты любишь говорить? А какие получать?",
                    "Какие черты характера в других больше всего тебя раздражают?", "Твоя любимая эпоха?", "Как тебя называли в детстве?",
                    "О чем любишь думать по ночам и перед сном?", "Твой любимый писатель?", "Твой любимый музыкант?","Твой самый любимый актёр и актриса?",
                    "Твоё лучшее приключение в жизни?", "Приключение, которое ты хочешь совершить?", "Твой скрытый талант, о котором почти никто не знает?",
                    "Твой лучший друг?", "Любимый супергерой или вымышленный персонаж?", "Почему учишься или работаешь в данной сфере?",
                    "Твоя любимая фраза или цитата?", "Какой марки была или должна быть твоя первая машина?", "Что хуже: год не ездить на автомобиле или месяц быть без телефона?"
                };
                List<string> questFemale = new List<string>{"Опиши себя в трех словах.", "Твое любимое хобби?", "Говорят, девушки всегда долго собираются. Это про тебя?",
                    "В какой стране ты хотела бы жить?", "Что ты больше всего ценишь в своих друзьях?",
                    "Кто для тебя пример для подражания?", "Твой любимый цвет?", "Твой любимый запах?",
                    "В каком деле тебя можно назвать профессионалом?", "Твое любимое блюдо?","Твоя любимая игра?",
                    "Как давно ты закончила школу?", "Если бы у тебя была такая возможность, то в какой ситуации ты хотела бы оказаться на час?",
                    "Какой язык ты бы выучила?", "Чай или кофе?", "Твой любимый школьный предмет?", "Android или iPhone?",
                    "Твоя заветная мечта?", "Твои ближайшие цели?", "В каких городах ты была?", "Что означает твое имя?",
                    "Твой любимый сериал или шоу?", "Играешь ли ты на музыкальном инструменте? На каком хотела бы научиться играть?",
                    "Любимый мультгерой?", "За что ты больше всего ценишь жизнь?", "Твое самое первое воспоминание с детства?",
                    "Самое красивое место, в котором ты была?", "Что стоит на твоём окне?", "Твоя худшая причёска?",
                    "Что для тебя страшнее во время отпуска: невыносимая жара в горах или шторм на море?", "Красила ли ты когда-нибудь волосы?",
                    "Что в уборке ты не любишь больше всего?", "Что ты думаешь об игроке справа от тебя?", "Что ты думаешь об игроке слева от тебя?",
                    "Твой рост?", "Если бы тебе навсегда запретили заниматься твоей нынешней работой, какую новую профессию ты бы выбрала?",
                    "Хотела бы ты дружить с таким человеком, как ты?", "Если бы список семи чудес света нужно было составить заново, что бы ты в него включила?",
                    "Если бы твоя жизнь была фильмом, как бы он назывался?", "Какого цвета должна быть идеальная кухня?",
                    "Ты возвращаешься домой с работы и видишь, что твоё место занял клон, а друзья и семья не заметили подмены. Как доказать, что их настоящая родственница — ты?",
                    "Какому стилю танцев ты хотела бы научиться?", "Чем ты предпочитаешь путешествовать?", "Твой любимый напиток?",
                    "Твой любимый фрукт?", "Кого в этой комнате ты знаешь лучше всего?", "Чтобы ты съела прямо сейчас?", "Что хуже: полгода не ходить в салон красоты или месяц быть без телефона?",
                    "Как ты проводишь свободное время?","Назви 5 приложений на телефоне, которыми ты пользуешься чаще всего.",
                    "Самый полезный совет, который тебе дали?", "Любимый стиль музыки?", "Какими должны быть идеальные отношения?",
                    "Что заставляет тебя чувствовать ребёнком и окунуться в детство?", "Как ты оцениваешь свою внешность и характер?",
                    "Что тебе никогда не надоест делать?", "Как ты избавляешься от негативных мыслей?", "Как бы ты потратила свои последние часы в жизни?",
                    "Самое лучшее блюдо, что ты когда-либо готовила.", "Что изменило твоё жизненное мировоззрение в корне?",
                    "Самая скучное занятие для тебя?", "Твой любимый стиль одежды?", "Какие комплименты любишь говорить? А какие получать?",
                    "Какие черты характера в других больше всего тебя раздражают?", "Твоя любимая эпоха?", "Как тебя называли в детстве?",
                    "О чем любишь думать по ночам и перед сном?", "Твой любимый писатель?", "Твой любимый музыкант?","Твой самый любимый актёр и актриса?",
                    "Твоё лучшее приключение в жизни?", "Приключение, которое ты хочешь совершить?", "Твой скрытый талант, о котором почти никто не знает?",
                    "Твой лучший друг?", "Любимый супергерой или вымышленный персонаж?", "Почему учишься или работаешь в данной сфере?",
                    "Твоя любимая фраза или цитата?"
                };
                Data.questionMale = questMale;
                Data.questionFemale = questFemale;
            }
            button_start.IsEnabled = true;
            Button1.IsEnabled = false;
            Button2.IsEnabled = true;
            btViewStandartQuestion.IsEnabled = true;
        }
        private void button_start_Click(object sender, RoutedEventArgs e)
        {
            Game window1 = new Game();
            window1.Show();
            Close();
        }

        private void Button_Click_2(object sender, RoutedEventArgs e)
        {
            if (Data.Endless)
            {
                ViewQuestions window = new ViewQuestions
                {
                    Owner = this,
                    Background = Theme.background_color
                };
                _ = window.ShowDialog();

            }
            else
            {
                ViewGenderQuestions window = new ViewGenderQuestions
                {
                    Owner = this,
                    Background = Theme.background_color
                };
                _ = window.ShowDialog();
            }
        }

        private void Button_Click_3(object sender, RoutedEventArgs e)
        {
            button_start.IsEnabled = true;
            Button1.IsEnabled = true;
            btViewStandartQuestion.IsEnabled = true;
            LoadQuestionSet lqs = new LoadQuestionSet
            {
                Background = Theme.background_light_color,
                BorderBrush = Theme.border_background_color,
                BorderThickness = new Thickness(3)
            };
            _ = lqs.ShowDialog();
        }
    }
}
